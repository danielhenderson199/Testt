name: VM-Server

on:
  workflow_dispatch:
    inputs:
      iso_url:
        description: 'OS ISO?'
        required: true
        default: 'https://software-download.microsoft.com/db/Win11_22H2_English_x64.iso'
      vm_name:
        description: 'Name of the VM/disk'
        required: true
        default: 'windowsserver'
      tg_bot_token:
        description: 'Telegram Bot Token'
        required: true
      tg_chat_id:
        description: 'Telegram Chat ID'
        required: true

jobs:
  run-vm:
    runs-on: ubuntu-latest

    steps:
      - name: Send Start Info to Telegram
        run: |
          curl -s -X POST "https://api.telegram.org/bot${{ github.event.inputs.tg_bot_token }}/sendMessage" \
            -d chat_id="${{ github.event.inputs.tg_chat_id }}" \
            -d text="üöÄ *VM Starting...*\nOS ISO: *${{ github.event.inputs.iso_url }}*\nVM Name: *${{ github.event.inputs.vm_name }}*\nDrives: 5" \
            -d parse_mode=Markdown

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu-system-x86 ovmf curl novnc websockify unzip
          curl -fsSL https://tailscale.com/install.sh | sh

      - name: Download ISO
        run: |
          wget -O "${{ github.event.inputs.vm_name }}.iso" "${{ github.event.inputs.iso_url }}"
          curl -s -X POST "https://api.telegram.org/bot${{ github.event.inputs.tg_bot_token }}/sendMessage" \
            -d chat_id="${{ github.event.inputs.tg_chat_id }}" \
            -d text="‚úÖ Windows ISO downloaded."

      - name: Create Disk
        run: |
          qemu-img create -f qcow2 "${{ github.event.inputs.vm_name }}.qcow2" 256G
          curl -s -X POST "https://api.telegram.org/bot${{ github.event.inputs.tg_bot_token }}/sendMessage" \
            -d chat_id="${{ github.event.inputs.tg_chat_id }}" \
            -d text="üíΩ Virtual disk created (256G)."

      - name: Start Tailscale and Send Auth Link
        run: |
          sudo tailscaled --tun=userspace-networking --socks5-server=localhost:1055 &
          sleep 5
          AUTH_OUTPUT=$(sudo tailscale up 2>&1 || true)

          # Extract and send auth URL
          AUTH_URL=$(echo "$AUTH_OUTPUT" | grep -o 'https://login.tailscale.com/a/[a-zA-Z0-9]*' || true)
          if [ -n "$AUTH_URL" ]; then
            curl -s -X POST "https://api.telegram.org/bot${{ github.event.inputs.tg_bot_token }}/sendMessage" \
              -d chat_id="${{ github.event.inputs.tg_chat_id }}" \
              -d text="üîê *Tailscale Login Required:*\n$AUTH_URL" \
              -d parse_mode=Markdown
          else
            echo "No Tailscale auth URL found."
          fi

      - name: Start VM and Web Interface
        run: |
          if [ -f /usr/share/OVMF/OVMF_CODE_4M.fd ]; then
            CODE_PATH=/usr/share/OVMF/OVMF_CODE_4M.fd
            VARS_PATH=/usr/share/OVMF/OVMF_VARS_4M.fd
          else
            wget -q https://github.com/tianocore/edk2/releases/download/edk2-stable202307/OVMF_CODE.fd -O OVMF_CODE.fd
            wget -q https://github.com/tianocore/edk2/releases/download/edk2-stable202307/OVMF_VARS.fd -O OVMF_VARS.fd
            CODE_PATH=./OVMF_CODE.fd
            VARS_PATH=./OVMF_VARS.fd
          fi

          sudo qemu-system-x86_64 \
            -enable-kvm \
            -cpu host \
            -smp 4 \
            -m 16G \
            -drive if=pflash,format=raw,readonly=on,file=$CODE_PATH \
            -drive if=pflash,format=raw,file=$VARS_PATH \
            -drive file="${{ github.event.inputs.vm_name }}.qcow2",format=qcow2 \
            -cdrom "${{ github.event.inputs.vm_name }}.iso" \
            -boot d \
            -vnc :0 \
            -netdev user,id=net0,hostfwd=tcp::3389-:3389 \
            -device e1000,netdev=net0 \
            -device usb-ehci,id=ehci \
            -device usb-tablet,bus=ehci.0 &

          sleep 10

          nohup websockify --web=/usr/share/novnc 6080 localhost:5900 &

          curl -s -X POST "https://api.telegram.org/bot${{ github.event.inputs.tg_bot_token }}/sendMessage" \
            -d chat_id="${{ github.event.inputs.tg_chat_id }}" \
            -d text="üñ•Ô∏è *VM Launched!*\nüîß VNC: localhost:6080\nüñ± RDP: localhost:3389\n‚ö†Ô∏è Expose ports with your tunnel or use Tailscale." \
            -d parse_mode=Markdown

          curl -s -X POST "https://api.telegram.org/bot${{ github.event.inputs.tg_bot_token }}/sendMessage" \
            -d chat_id="${{ github.event.inputs.tg_chat_id }}" \
            -d text="‚è≥ Workflow will stay active for 6 hours." \
            -d parse_mode=Markdown

          timeout 21600 bash -c "while true; do sleep 30; done"
