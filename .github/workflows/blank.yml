name: VM-Server

on:
  workflow_dispatch:
    inputs:
      iso_url:
        description: 'OS ISO?'
        required: true
        default: 'https://software-download.microsoft.com/db/Win11_22H2_English_x64.iso'
      vm_name:
        description: 'Name of the VM/disk'
        required: true
        default: 'windowsserver'

jobs:
  run-vm:
    runs-on: ubuntu-latest
    env:
      TAILSCALE_AUTHKEY: ${{ secrets.TAILSCALE_AUTHKEY }}

    steps:
      - name: Setup Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu-system-x86 ovmf curl novnc websockify unzip
          curl -fsSL https://tailscale.com/install.sh | sh

      - name: Download Windows ISO
        run: |
          wget -O "${{ github.event.inputs.vm_name }}.iso" "${{ github.event.inputs.iso_url }}"
          echo "‚úÖ ISO downloaded."

      - name: Create 256GB Disk
        run: |
          qemu-img create -f qcow2 "${{ github.event.inputs.vm_name }}.qcow2" 256G
          echo "‚úÖ Disk created."

      - name: Start Tailscale
        run: |
          sudo tailscaled --tun=userspace-networking --socks5-server=localhost:1055 &
          sleep 5
          sudo tailscale up --authkey=$TAILSCALE_AUTHKEY --hostname="${{ github.event.inputs.vm_name }}" --accept-routes
          TS_IP=$(tailscale ip -4 | head -n 1)
          echo "TAILSCALE_IP=$TS_IP" >> $GITHUB_ENV
          echo "‚úÖ Tailscale IP: $TS_IP"

      - name: Start Playit.gg Agent (no config, no spam)
        run: |
          curl -LO https://github.com/playit-cloud/playit-agent/releases/latest/download/playit-linux.zip
          unzip playit-linux.zip
          chmod +x playit

          echo "üîÑ Starting Playit.gg agent..."
          ./playit > playit.log 2>&1 &
          sleep 5

          echo "üîç Searching for claim link..."
          CLAIM_URL=$(grep -o 'https://playit.gg/agent/claim/[a-zA-Z0-9-]*' playit.log | head -n 1)

          if [ -n "$CLAIM_URL" ]; then
            echo "‚úÖ Claim your Playit agent here: $CLAIM_URL"
          else
            echo "‚ùå No claim link found. Check playit.log manually."
          fi

      - name: Launch VM and Hold Job
        run: |
          if [ -f /usr/share/OVMF/OVMF_CODE_4M.fd ]; then
            CODE_PATH=/usr/share/OVMF/OVMF_CODE_4M.fd
            VARS_PATH=/usr/share/OVMF/OVMF_VARS_4M.fd
          else
            wget -q https://github.com/tianocore/edk2/releases/download/edk2-stable202307/OVMF_CODE.fd -O OVMF_CODE.fd
            wget -q https://github.com/tianocore/edk2/releases/download/edk2-stable202307/OVMF_VARS.fd -O OVMF_VARS.fd
            CODE_PATH=./OVMF_CODE.fd
            VARS_PATH=./OVMF_VARS.fd
          fi

          sudo qemu-system-x86_64 \
            -enable-kvm \
            -cpu host \
            -smp 4 \
            -m 16G \
            -drive if=pflash,format=raw,readonly=on,file=$CODE_PATH \
            -drive if=pflash,format=raw,file=$VARS_PATH \
            -drive file="${{ github.event.inputs.vm_name }}.qcow2",format=qcow2 \
            -cdrom "${{ github.event.inputs.vm_name }}.iso" \
            -boot d \
            -vnc :0 \
            -netdev user,id=net0,hostfwd=tcp::3389-:3389 \
            -device e1000,netdev=net0 \
            -device usb-ehci,id=ehci \
            -device usb-tablet,bus=ehci.0 &

          sleep 10
          nohup websockify --web=/usr/share/novnc 6080 localhost:5900 &
          echo "üåê This vm is public for anyone to use simply click on the link. VNC on port 6080, RDP on 3389 (via Playit)."

          timeout 21600 bash -c "while true; do sleep 30; done"
